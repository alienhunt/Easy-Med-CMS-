"""
Django settings for CMS project.

Generated by 'django-admin startproject' using Django 3.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from io import DEFAULT_BUFFER_SIZE
from pathlib import Path
from os import path, environ

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = 'y91q(1+69u)dda0(qgp1z^3wsezddf+_%vjfslfx9pw6=usfi('
SECRET_KEY = environ.get("DJ_SECRET_KEY", default=None)

# SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = True in development 
# DEBUG value can be True/False or 1/0
DEBUG = int(environ.get("DJ_DEBUG", default=0))

ALLOWED_HOSTS = [
    'cms-wa.herokuapp.com',
    '*'
]


# Application definition

INSTALLED_APPS = [
    'whitenoise.runserver_nostatic',  # comment this in development
    # 'CMS.apps.SuitsConfig', # comment this in production
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',  # for rest api building
    'rest_framework.authtoken',  # for token authentication creates a model for tokens
    'cms.apps.CmsConfig',
    'cms_api.apps.CmsApiConfig',
    'storages', # for aws s3 storage
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',  # for serving static files
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'CMS.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'CMS.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        # 'NAME': BASE_DIR / 'db.sqlite3',
        'NAME': environ.get('PSQL_NAME'),
        'HOST': environ.get('PSQL_HOST'),
        'PORT': environ.get('PSQL_PORT'),
        'USER': environ.get('PSQL_USER'),
        'PASSWORD': environ.get('PSQL_PASS'),
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Calcutta'  # 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = 'static/'

MEDIA_URL = 'cms/media/'

STATICFILES_DIRS = [
    path.join(BASE_DIR, 'static')
]

STATIC_ROOT = path.join(BASE_DIR, 'all_static')

MEDIA_ROOT = path.join(BASE_DIR, STATIC_URL+MEDIA_URL)  # 'static/cms/media')


# set session cookie default age
SESSION_COOKIE_AGE = 3*60  # three minutes


# All the the variables are for aws S3 account
AWS_ACCESS_KEY_ID = environ.get("AWS_ACCESS_KEY_ID")

# Access Key
AWS_SECRET_ACCESS_KEY = environ.get("AWS_SECRET_ACCESS_KEY")

# S3 Storage name
AWS_STORAGE_BUCKET_NAME = environ.get("AWS_STORAGE_BUCKET_NAME")

AWS_S3_FILE_OVERWRITE = False
AWS_DEFAULT_ACL = None

AWS_S3_REGION_NAME = "us-east-2"
AWS_S3_SIGNATURE_VERSION = "s3v4"

DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'
